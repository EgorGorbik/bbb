{"ast":null,"code":"var _jsxFileName = \"/home/egor/Projects/bbb/src/Components/Comment/index.js\";\nimport React from 'react';\n\nfunction Comment(props) {\n  const changeTimeFormat = seconds => {\n    console.log(seconds);\n    let minutes = Math.trunc(seconds / 60);\n    seconds = Math.trunc(seconds % 60);\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n\n    return minutes + ':' + seconds;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar\",\n    src: `./img/${props.data.name}.jpg`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"commentator_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.data.name)), React.createElement(\"div\", {\n    onClick: () => {\n      props.rewindVideo(props.data.timeStamp);\n    },\n    className: \"time_stamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, changeTimeFormat(props.data.timeStamp)), React.createElement(\"div\", {\n    className: \"comment_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.data.comment));\n}\n\nexport default Comment;","map":{"version":3,"sources":["/home/egor/Projects/bbb/src/Components/Comment/index.js"],"names":["React","Comment","props","changeTimeFormat","seconds","console","log","minutes","Math","trunc","data","name","rewindVideo","timeStamp","comment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAG,EAArB,CAAd;AACAA,IAAAA,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAG,EAArB,CAAV;;AACA,QAAGG,OAAO,GAAG,EAAb,EAAiB;AACbA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAGH,OAAO,GAAG,EAAb,EAAiB;AACbA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,WAAOG,OAAO,GAAG,GAAV,GAAgBH,OAAvB;AACH,GAXD;;AAaA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAG,SAAQF,KAAK,CAACQ,IAAN,CAAWC,IAAK,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCT,KAAK,CAACQ,IAAN,CAAWC,IAA9C,CAFJ,CADJ,EAKI;AAAK,IAAA,OAAO,EAAE,MAAM;AAACT,MAAAA,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACQ,IAAN,CAAWG,SAA7B;AAAwC,KAA7D;AAA+D,IAAA,SAAS,EAAC,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuFV,gBAAgB,CAACD,KAAK,CAACQ,IAAN,CAAWG,SAAZ,CAAvG,CALJ,EAMI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BX,KAAK,CAACQ,IAAN,CAAWI,OAA1C,CANJ,CADJ;AAUH;;AAED,eAAeb,OAAf","sourcesContent":["import React from 'react';\n\nfunction Comment(props) {\n    const changeTimeFormat = (seconds) => {\n        console.log(seconds)\n        let minutes = Math.trunc(seconds / 60);\n        seconds = Math.trunc(seconds % 60);\n        if(minutes < 10) {\n            minutes = '0' + minutes\n        }\n        if(seconds < 10) {\n            seconds = '0' + seconds\n        }\n        return minutes + ':' + seconds;\n    }\n\n    return(\n        <div className='comment'>\n            <div className='comment_header'>\n                <img className='avatar' src={`./img/${props.data.name}.jpg`}/>\n                <div className='commentator_name'>{props.data.name}</div>\n            </div>\n            <div onClick={() => {props.rewindVideo(props.data.timeStamp)}} className='time_stamp'>{changeTimeFormat(props.data.timeStamp)}</div>\n            <div className='comment_text'>{props.data.comment}</div>\n        </div>\n    )\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}