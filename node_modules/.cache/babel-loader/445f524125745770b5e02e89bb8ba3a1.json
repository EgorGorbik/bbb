{"ast":null,"code":"var _jsxFileName = \"/home/egor/Projects/bbb/src/Components/Video/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport '../../styles/index.css';\nimport CommentInput from \"../CommentInput\";\nimport AvatarTimeline from \"./AvatarTimeline\";\nconst Video = React.forwardRef((props, ref) => {\n  const [duration, setDuration] = useState('00:00');\n  const [highlight, changeHighlight] = useState([]);\n\n  const progressUpdate = () => {\n    var time = Math.trunc(ref.current.currentTime); // time = changeTimeFormat(time);\n\n    props.setTimePassed(time); // Устанавливаем позицию воспроизведения\n\n    let positionBar = document.getElementById(\"durationBar\");\n    positionBar.style.width = ref.current.currentTime / ref.current.duration * 100 + \"%\";\n  };\n\n  const changeDuration = (e, data) => {\n    const video = document.getElementsByTagName('video')[0];\n    document.getElementsByClassName('video-container')[0].innerHTML = '';\n    document.getElementsByClassName('video-container')[0].append(video);\n\n    if (data && data.highlight) {\n      data.highlight.map(e => highlightArea(e));\n      props.pausePlayer();\n    }\n\n    let len = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n    let difference = len / document.getElementsByClassName('barContainer')[0].offsetWidth;\n    ref.current.currentTime = difference * ref.current.duration;\n  };\n\n  const changeTimeFormat = seconds => {\n    let minutes = Math.trunc(seconds / 60);\n    seconds = Math.trunc(seconds % 60);\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n\n    return minutes + ':' + seconds;\n  };\n\n  console.log(highlight);\n\n  const highlightArea = e => {\n    changeHighlight([...highlight, {\n      pageX: e.pageX,\n      pageY: e.pageY\n    }]);\n    let left = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n    let bottom = document.getElementsByClassName('barContainer')[0].offsetTop - e.pageY;\n\n    if (bottom / document.getElementsByClassName('video-container')[0].offsetHeight * 100 < 10) {\n      return;\n    }\n\n    left -= 50;\n    bottom -= 50;\n    left = left / document.getElementsByClassName('video-container')[0].offsetWidth * 100;\n    bottom = bottom / document.getElementsByClassName('video-container')[0].offsetHeight * 100;\n    let area = document.createElement('div');\n    area.className = 'highlightArea';\n    area.style.width = '20%';\n    area.style.height = '20%';\n    area.style.marginLeft = left + '%';\n    area.style.bottom = bottom + '%';\n    document.getElementsByClassName('video-container')[0].append(area);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"video-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    onClick: e => highlightArea(e),\n    ref: ref,\n    onTimeUpdate: progressUpdate,\n    onCanPlay: e => {\n      setDuration(e.target.duration);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: \"./video/test.mp4\",\n    type: \"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"barContainer\",\n    onClick: e => changeDuration(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"durationBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"timeline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.comments[0] && props.comments.map(e => React.createElement(AvatarTimeline, {\n    changeDuration: changeDuration,\n    duration: duration,\n    data: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"player_control_panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: \"icon\",\n    name: props.player,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, changeTimeFormat(props.timePassed), \" / \", changeTimeFormat(duration)))));\n});\nexport default Video;","map":{"version":3,"sources":["/home/egor/Projects/bbb/src/Components/Video/index.jsx"],"names":["React","useEffect","useState","Icon","CommentInput","AvatarTimeline","Video","forwardRef","props","ref","duration","setDuration","highlight","changeHighlight","progressUpdate","time","Math","trunc","current","currentTime","setTimePassed","positionBar","document","getElementById","style","width","changeDuration","e","data","video","getElementsByTagName","getElementsByClassName","innerHTML","append","map","highlightArea","pausePlayer","len","pageX","offsetLeft","difference","offsetWidth","changeTimeFormat","seconds","minutes","console","log","pageY","left","bottom","offsetTop","offsetHeight","area","createElement","className","height","marginLeft","target","comments","player","timePassed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport '../../styles/index.css';\nimport CommentInput from \"../CommentInput\";\nimport AvatarTimeline from \"./AvatarTimeline\";\n\nconst Video = React.forwardRef((props, ref) => {\n    const [ duration, setDuration ] = useState('00:00');\n    const [ highlight, changeHighlight ] = useState([]);\n\n    const progressUpdate = () => {\n        var time = Math.trunc(ref.current.currentTime);\n       // time = changeTimeFormat(time);\n        props.setTimePassed(time);\n        // Устанавливаем позицию воспроизведения\n        let positionBar = document.getElementById(\"durationBar\");\n        positionBar.style.width = (ref.current.currentTime / ref.current.duration * 100) + \"%\";\n    }\n\n    const changeDuration = (e, data) => {\n        const video = document.getElementsByTagName('video')[0];\n        document.getElementsByClassName('video-container')[0].innerHTML = '';\n        document.getElementsByClassName('video-container')[0].append(video);\n        if(data && data.highlight) {\n            data.highlight.map(e => highlightArea(e));\n            props.pausePlayer();\n        }\n        let len = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n        let difference = (len/ document.getElementsByClassName('barContainer')[0].offsetWidth);\n        ref.current.currentTime = difference * ref.current.duration;\n    }\n\n    const changeTimeFormat = (seconds) => {\n        let minutes = Math.trunc(seconds / 60);\n        seconds = Math.trunc(seconds % 60);\n        if(minutes < 10) {\n            minutes = '0' + minutes\n        }\n        if(seconds < 10) {\n            seconds = '0' + seconds\n        }\n        return minutes + ':' + seconds;\n    }\n\n    console.log(highlight)\n    const highlightArea = (e) => {\n        changeHighlight([...highlight, {pageX: e.pageX, pageY: e.pageY}])\n        let left = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n        let bottom = document.getElementsByClassName('barContainer')[0].offsetTop - e.pageY;\n        if(bottom / document.getElementsByClassName('video-container')[0].offsetHeight * 100 < 10) {\n            return\n        }\n        left -= 50;\n        bottom -= 50;\n\n        left = left / document.getElementsByClassName('video-container')[0].offsetWidth * 100;\n        bottom = bottom / document.getElementsByClassName('video-container')[0].offsetHeight * 100;\n\n        let area = document.createElement('div');\n        area.className = 'highlightArea';\n        area.style.width = '20%';\n        area.style.height = '20%';\n        area.style.marginLeft = left + '%';\n        area.style.bottom = bottom + '%';\n        document.getElementsByClassName('video-container')[0].append(area);\n    }\n\n    return(\n        <div className='video-wrapper'>\n            <div className='player'>\n                <div className='video-container'>\n                    <video onClick={(e) => highlightArea(e)} ref={ref} onTimeUpdate={progressUpdate} onCanPlay={(e) => {setDuration(e.target.duration)}}>\n                        <source src='./video/test.mp4' type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'/>\n                    </video>\n                </div>\n                <div className='barContainer' onClick={(e) => changeDuration(e)}>\n                    <div id=\"durationBar\"></div>\n                </div>\n                <div className='timeline'>\n                    {props.comments[0] &&\n                     props.comments.map(e => <AvatarTimeline\n                         changeDuration={changeDuration}\n                         duration={duration}\n                         data={e}\n                     />)}\n                </div>\n                <div className='player_control_panel'>\n                    <Icon className='icon' name={props.player} size='large'/>\n                    <div className='time'>{changeTimeFormat(props.timePassed)} / {changeTimeFormat(duration)}</div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}